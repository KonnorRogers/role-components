<!-- The following is for debugging. Feel free to ignore -->
<style>
  light-code {
    isolation: isolate;
  }
  pre {
    background-color: rgb(250, 250, 250);
    padding: 1rem;
    color: rgb(56, 58, 66);
    overflow: auto;
  }
</style>
<br>
URL Encoded:
<pre tabindex="-1"><code id="url-encoded"></code></pre>
<br>
Form Data:
<br>
<light-code wrap="hard" language="js" id="form-data"><script type="text/plain" slot="code"></script></light-code>
<br>
<script type="module">
  function showFormData () {
    setTimeout(() => {
      const formDataToObject = (formData) => {
        return Object.fromEntries(
          Array.from(formData.keys()).map(key => [
            key,
            formData.getAll(key).length > 1 ? formData.getAll(key) : formData.get(key)
          ])
        )
      }
      const formData = new FormData(document.querySelector("form"))
      const obj = formDataToObject(formData)
      const json = JSON.stringify(obj, null, 2)

      const urlEncoded = []
      for (const [key, value] of formData.entries()) {
        urlEncoded.push(encodeURIComponent(key) + "=" + encodeURIComponent(value))
      }

      document.querySelector("#url-encoded").innerText = urlEncoded.length ? "?" + urlEncoded.join("&") : ""
      // document.querySelector("#form-data").innerText = json
      document.querySelector("#form-data").code = json
    })
  }

  ;(async () => {
    await Promise.allSettled([
      <% @elements.each do |element| %>
      window.customElements.whenDefined("<%= element %>"),
      <% end %>
    ])
    setTimeout(() => {
      showFormData()
    })
  })()

  document.addEventListener("input", showFormData)
  document.addEventListener("change", showFormData)

  document.addEventListener("submit", (e) => {
    e.preventDefault()
    window.alert("Form submitted successfully!")
    showFormData()
  })
</script>

